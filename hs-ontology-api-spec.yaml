openapi: 3.0.3
info:
  title: HubMAP/SenNet Ontology API (hs-ontology-api)
  description: The HuBMAP/SenNet Ontology API contains endpoints for querying a [UBKG](https://ubkg.docs.xconsortia.org/) instance with content from the [HuBMAP/SenNet context](https://ubkg.docs.xconsortia.org/contexts/#hubmapsennet-context). The hs-ontology-api imports the [ubkg-api](https://smart-api.info/ui/96e5b5c0b0efeef5b93ea98ac2794837), which encapsulates both basic connectivity to a UBKG instance and generic endpoint code.
  version: 2.0.0
  contact:
    name: GitHub repository
    url: https://github.com/x-atlas-consortia/hs-ontology-api
servers:
  - url: https://ontology.api.hubmapconsortium.org/
    description: Production server
paths:
  /assayclasses:
    get:
      operationId: assayclass_get
      summary: REPLACEMENT for datasets endpoint. Returns metadata on "assay classes"--the rule-based classifications of datasets managed by the Rules Engine. An assay class describes characteristics that are common to all datasets that are processed with a particular workflow.
      parameters:
        - name: application_context
          in: query
          required: true
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
        - name: process_state
          in: query
          required: false
          description: optional filter to only assay classes that correspond to a particular process state
          schema:
            type: string
            enum:
              - primary
              - derived
              - epic
        - name: assaytype
          in: query
          required: false
          description: optional filter to a particular assaytype. Multiple assay classes can have the same assaytype.
          schema:
            type: string
            example: AF
      responses:
        '200':
          description: A JSON array of assay classification objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssayClass'
        '400':
          description: Missing parameter; invalid parameter value
        '404':
          description: No assay classes matching parameters
        '5XX':
          description: Unknown error
  /assayclasses/{class}:
    get:
      operationId: assayclass_name_get
      summary: REPLACEMENT for datasets endpoint. Returns metadata on the specified "assay class"--the rule-based classification of a dataset managed by the Rules Engine. An assay class describes characteristics that are common to all datasets that are processed with a particular workflow.
      parameters:
        - name: class
          in: path
          required: true
          description: An identifier for an assay class. Can be EITHER the string that corresponds to the "rule_description" key in the testing_rules_chain.json file (e.g., "non-DCWG primary AF") OR the code from the UBKG for the assay class (e.g., "C200001"). Note that HUBMAP and SENNET have equivalent codes for each assay class for which the SAB differs--e.g., the "non-DCWG primary AF" assay class has full code "HUBMAP:C200001" in HUBMAP and "SENNET:C200001" in SENNET. If using the code, do not include the application context (HUBMAP or SENNET).
          schema:
            type: string
            example: non-DCWG primary AF
        - name: application_context
          in: query
          required: true
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
        - name: process_state
          in: query
          required: false
          description: optional filter to only assay classes that correspond to a particular process state
          schema:
            type: string
            enum:
              - primary
              - derived
              - epic
        - name: assaytype
          in: query
          required: false
          description: optional filter to a particular assaytype. Multiple assay classes can have the same assaytype.
          schema:
            type: string
            example: AF
      responses:
        '200':
          description: A JSON array of assay classification objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssayClass'
        '400':
          description: Missing parameter; invalid parameter value
        '404':
          description: No assay classes matching parameters
        '5XX':
          description: Unknown error
  /assayname: # CPK MAR 2023 - replacement for search-api endpoint of the same name
    post:
      operationId: assayname_post
      summary: Replacement for assayname endpoint in the search-api
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssayNameRequest"
      responses:
        '200':
          description: A JSON array of the assaytype with the specified name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayTypePropertyInfo'
        '400':
          description: Invalid request - missing request body; missing key *name* in request body; value for key *name* incorrectly specified
        '404':
          description: No assay type found corresponding to the value of the *name* key in the request body
        '5XX':
          description: Unknown error
  /assaytype:
    get:
      operationId: assaytype_get
      summary: Replacement for endpoint in search-api. The primary parameter filters by assay type (primary, not primary); if no value provided, all assay types are returned.
      parameters:
        - name: primary
          in: query
          required: false
          description: Determines if records are all, primary, or not primary.
          schema:
            type: string
            example: true
        - name: application_context
          in: query
          required: false
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
      responses:
        '200':
          description: A JSON array of the assay type name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayTypePropertyInfo'
  /assaytype/{name}: # CPK MAR 2023 - replacement for search-src endpoint of the same name
    get:
      operationId: assaytype_name_get
      summary: Replacement for the same endpoint in search-api with the addition of application_context
      parameters:
        - name: name
          in: path
          required: true
          description: AssayType name
          schema:
            type: string
            example: bulk-RNA
        - name: application_context
          in: query
          required: false
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
      responses:
        '200':
          description: A JSON array of the assay type name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayTypePropertyInfo'
              example:
                name: bulk-RNA
                primary: true
                description: Bulk RNA-seq
                vitessce-hints: ["pyramid","anndata"]
                contains-pii: true
                vis-only: true
  /organs:
    get:
      operationId: get_organ_types
      summary: Returns information used to support the Registration User Interface (RUI), including the 2-character RUI code and corresponding details from the UBERON and application (HUBMAP or SENNET) ontologies.
      parameters:
        - name: application_context
          in: query
          required: false
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
      responses:
        '200':
          description: A JSON array of the organ types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabCodeTermRuiCode'
  /organs/by-code:
    get:
      operationId: get_organ_by_code
      summary: Returns term by 2 letter organ code
      parameters:
        - name: application_context
          in: query
          required: false
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
      responses:
        '200':
          description: A JSON array of term by 2 letter organ code
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuiCodeTerm'
  /relationships/gene/{target_symbol}:
    get:
      operationId: relationships_for_gene_target_symbol_get
      summary: Returns relationships associated with the gene
      parameters:
        - name: target_symbol
          in: path
          required: true
          description: one of gene name, symbol, alias, or prior symbol
          schema:
            type: string
            example: MMRN1
      responses:
        '200':
          description: A JSON array of the HGNCIdRelationships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HGNCIdRelationships'
              example:
                symbol-approved: ["MMRN1"]
                symbol-previous: ["MMRN"]
                symbol-alias: ["EMILIN4", "GPIa*", "ECM"]
        '404':
          description: Nothing found for gene target symbol *target_symbol*.
        '5XX':
          description: Unknown error
  /valueset:
    get:
      operationId: valueset_get
      summary: Returns a valueset of concepts that are children (have as isa relationship) of another concept.
      parameters:
        - name: parent_sab
          in: query
          required: true
          description: the SAB of the parent concept
          schema:
            type: string
            example: HUBMAP
        - name: parent_code
          in: query
          required: true
          description: the code of the parent concept in the SAB (local ontology)
          schema:
            type: string
            example: C000530
        - name: child_sabs
          in: query
          required: true
          description: the list of SABs for child concepts, in order of preference (in case of parent concepts with cross-references)
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              example: HUBMAP,SNOMEDCT_US
            default: [ ]
      responses:
        '200':
          description: A JSON array of preferred terms for child codes that have an isa relationship with the parent code
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabCodeTerm'
  /genes-info:
    get:
      operationId: genes_info_get
      summary: Return high-level information on a set of genes specified by pagination request parameters.
      parameters:
        - name: page
          in: query
          required: false
          description: Offset set of genes of count=genes_per_page. Can be a non-negative number or the words "first" or "last".
          schema:
            type: string
            default: 1
          example: 1
        - name: genes_per_page
          in: query
          required: false
          description: Number of genes per "page" to return. Can be a nonzero number.
          schema:
            type: string
            default: 10
        - name: starts_with
          in: query
          required: false
          description: Optional string by which to filter by gene symbol.
          schema:
            type: string
            example: M
      responses:
        '200':
          description: high-level information on genes specified by HGNC identifiers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneListResponse'
        '400':
          description: Invalid parameter--e.g., *genes_per_page* is either non-numeric or a negative number; *page* is something other than a non-negative number or the words 'first' or 'last'
        '404':
          description: No genes that satisfied the criteria were found. This usually means that there are no genes with HGNC approved symbols that start with the string specified in the *starts_with* parameter.
        '5XX':
          description: Unexpected error
  /genes/{id}:
    get:
      operationId: genes_get
      summary: Return detailed information on a gene specified by a HGNC identifier.
      parameters:
        - name: id
          in: path
          required: true
          description: HGNC identifier. An identifier can be an approved ID (e.g., 7178); approved symbol (e.g., MMRN1); alias (e.g., EMILIN4 for MMRN1); previous symbol (e.g., MMRN for MMRN1); previous alias; or a name string (approved, previous, alias--e.g., "multimerin 1").
          schema:
            type: string
            example: MMRN1
      responses:
        '200':
          description: detailed information on the gene specified by a HGNC identifier.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneDetailResponse'
        '404':
          description: No information for gene with HGNC identifier *id*.
        '5XX':
          description: Unexpected error
  /proteins-info:
    get:
      operationId: protein_info_get
      summary: Return high-level information on a set of proteins specified by pagination request parameters.
      parameters:
        - name: page
          in: query
          required: false
          description: Offset set of proteins of count=proteins_per_page. Can be a non-negative number or the words "first" or "last".
          schema:
            type: string
            default: 1
          example: 1
        - name: proteins_per_page
          in: query
          required: false
          description: Number of proteins per "page" to return. Can be a nonzero number.
          schema:
            type: string
            default: 10
        - name: starts_with
          in: query
          required: false
          description: Optional *case-insensitive* string by which to filter by UniProtKB recommended name or entry name
          schema:
            type: string
            example: M
      responses:
        '200':
          description: high-level information on proteins specified by UniProtKB identifiers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProteinListResponse'
        '400':
          description: Invalid parameter--e.g., *proteins_per_page* is either non-numeric or a negative number; *page* is something other than a non-negative number or the words 'first' or 'last'
        '404':
          description: No proteins that satisfied the criteria were found. This usually means that there are no proteins with UniprotKB identifiers that start with the string specified in the *starts_with* parameter.
        '5XX':
          description: Unexpected error
  /proteins/{id}:
    get:
      operationId: proteins_get
      summary: Return detailed information on a protein specified by a UniProtKB identifier.
      parameters:
        - name: id
          in: path
          required: true
          description: Case-insensitive UniProtKB identifier. Identifiers are either UniProtKB IDs (e.g., Q13201) or entry names (e.g., MMRN1_HUMAN).
          schema:
            type: string
            example: Q13201
      responses:
        '200':
          description: detailed information on the protein specified by a UniProtKB identifier.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProteinDetailResponse'
        '404':
          description: No information for protein with UniProtKB identifier *id*.
        '5XX':
          description: Unexpected error
  /celltypes-info:
    get:
      operationId: celltypes_info_get
      summary: Return high-level information on a set of cell types specified by pagination request parameters.
      parameters:
        - name: page
          in: query
          required: false
          description: Offset set of genes of count=celltypes_per_page. Can be a non-negative number or the words "first" or "last".
          schema:
            type: string
            default: 1
          example: 1
        - name: celltypes_per_page
          in: query
          required: false
          description: Number of cell types per "page" to return. Can be a nonzero number.
          schema:
            type: string
            default: 10
        - name: starts_with
          in: query
          required: false
          description: Optional *case-insensitive* string by which to filter by cell type name.
          schema:
            type: string
            example: E
      responses:
        '200':
          description: high-level information on cell types specified by Cell Ontology.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CellTypeListResponse'
        '400':
          description: Invalid parameter--e.g., *celltypes_per_page* is either non-numeric or a negative number; *page* is something other than a non-negative number or the words 'first' or 'last'
        '404':
          description: No cell types that satisfied the criteria were found. This usually means that there are no cell types with names that start with the string specified in the *starts_with* parameter.
        '5XX':
          description: Unexpected error
  /celltypes/{id}:
    get:
      operationId: celltypes_get
      summary: Return detailed information on a cell type specified by an identifier (Cell Ontology ID).
      parameters:
        - name: id
          in: path
          required: true
          description: Cell Ontology ID
          schema:
            type: string
            example: 0002138
      responses:
        '200':
          description: detailed information on the cell type specified by a Cell Ontology identifier.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CellTypeDetailResponse'
        '404':
          description: No information for cell type with Cell Ontology identifier *id*.
        '5XX':
          description: Unexpected error
  /field-descriptions:
    get:
      operationId: field_descriptions_get
      summary: Returns descriptions for ingest metadata fields. Replacement for field-descriptions.yaml.
      parameters:
        - name: source
          in: query
          required: false
          description: case-insensitive name of the description source (HMFIELD = legacy field-descriptions.yaml; CEDAR = CEDAR)
          schema:
            type: string
            enum:
              - HMFIELD
              - CEDAR
      responses:
        '200':
          description: Array of ingest metadata fields with descriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldDescriptionsResponse'
        '400':
          description: Invalid *source* parameter (i.e., not CEDAR or HMFIELD); invalid parameter
        '404':
          description: No field descriptions (with list of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-descriptions/{name}:
    get:
      operationId: field_descriptions_name_get
      summary: Returns descriptions for the specified ingest metadata field. Replacement for field-descriptions.yaml.
      parameters:
        - name: name
          in: path
          required: true
          description: name of the metadata field
          schema:
            type: string
            example: ablation_distance_between_shots_x_units
        - name: source
          in: query
          required: false
          description: case-insensitive name of the description source (HMFIELD = legacy field-descriptions.yaml; CEDAR = CEDAR)
          schema:
            type: string
            enum:
              - HMFIELD
              - CEDAR
      responses:
        '200':
          description: Descriptions for single ingest metadata field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldDescriptionsResponseSingle'
        '400':
          description: Invalid *source* parameter (i.e., not CEDAR or HMFIELD); invalid parameter
        '404':
          description: No descriptions (with list of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-types:
    get:
      operationId: field_types_get
      summary: Return data types for ingest metadata fields. Replacement for field-types.yaml.
      parameters:
        - name: mapping_source
          in: query
          required: false
          description: case-insensitive name of the field-to-type mapping source (HMFIELD = field-types.yaml; CEDAR = CEDAR)
          schema:
            type: string
            enum:
              - HMFIELD
              - CEDAR
        - name: type_source
          in: query
          required: false
          description: case-insensitive name of the type source (HMFIELD = field-types.yaml; XSD = from CEDAR template)
          schema:
            type: string
            enum:
              - HMFIELD
              - XSD
        - name: type
          in: query
          required: false
          description: name of type in either XSD or HMFIELD ontology
          schema:
            type: string
            example: anyURI
      responses:
        '200':
          description: Array of metadata fields with their HMFIELD and/or XSD data types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldTypesResponse'
        '400':
          description: Invalid value for parameter (e.g., *mapping_source* not HMFIELD or CEDAR); invalid parameter
        '404':
          description: No field-type associations (with list of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-types/{name}:
    get:
      operationId: field_types_name_get
      summary: Return data types for a specified ingest metadata field. Replacement for field-types.yaml.
      parameters:
        - name: name
          in: path
          required: true
          description: name of the metadata field
          schema:
            type: string
            example: area_unit
        - name: mapping_source
          in: query
          required: false
          description: case-insensitive name of the field-to-type mapping source (HMFIELD = field-types.yaml; CEDAR = CEDAR)
          schema:
            type: string
            enum:
              - HMFIELD
              - CEDAR
        - name: type_source
          in: query
          required: false
          description: case-insensitive name of the type source (HMFIELD = field-types.yaml; XSD = from CEDAR template)
          schema:
            type: string
            enum:
              - HMFIELD
              - XSD
        - name: type
          in: query
          required: false
          description: name of type in either XSD or HMFIELD ontology
          schema:
            type: string
            example: float
      responses:
        '200':
          description: Array of metadata fields with their HMFIELD and/or XSD data types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldTypesResponseSingle'
        '400':
          description:  Invalid value for parameter (e.g., *mapping_source* not HMFIELD or CEDAR); invalid parameter
        '404':
          description: No field-type associations (with list of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-types-info:
    get:
      operationId: field_types_indo_get
      summary: Returns a list of all available data types for specified metadata field.
      parameters:
        - name: type_source
          in: query
          required: false
          description: case-insensitive name of the type source (HMFIELD = field-types.yaml; XSD = from CEDAR template)
          schema:
            type: string
            enum:
              - HMFIELD
              - XSD
      responses:
        '200':
          description: Array of HMFIELD and/or XSD data types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldTypesInfoResponse'
        '400':
          description:  Invalid parameter
        '404':
          description: No field types (with list of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-entities:
    get:
      operationId: field_entities_get
      summary: Return associations between ingest metadata fields and provenance entities. Replacement for field-entities.yaml.
      parameters:
        - name: source
          in: query
          required: false
          description: case-insensitive name of the ontology source for the provenance entity mappings. (HMFIELD = from legacy field-entities.yaml)
          schema:
            type: string
            enum:
              - HMFIELD
              - CEDAR
        - name: entity
          in: query
          required: false
          description: case-sensitive name for an entity in either HMFIELD or HUBMAP/SENNET
          schema:
            type: string
            example: Sample
        - name: application_context
          in: query
          required: false
          description: case-insensitive name of the application context
          schema:
            type: string
            enum:
              - HUBMAP
              - SENNET
      responses:
        '200':
          description: Associations between ingest metadata fields and provenance entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldEntitiesResponse'
        '400':
          description:  Invalid value for parameter (e.g., *source* not HMFIELD or CEDAR); invalid parameter
        '404':
          description: No field entities (with list of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-entities/{name}:
    get:
      operationId: field_entities_name_get
      summary: Return associations between specified ingest metadata field and provenance entities. Replacement for field-entities.yaml.
      parameters:
        - name: name
          in: path
          required: true
          description: name of the metadata field
          schema:
            type: string
            example: version
        - name: source
          in: query
          required: false
          description: case-insensitive name of the ontology source for the provenance entity mappings. (HMFIELD = from legacy field-entities.yaml)
          schema:
            type: string
            enum:
              - HMFIELD
              - HUBMAP
        - name: entity
          in: query
          required: false
          description: case-sensitive name for entity in either HMFIELD or HUBMAP/SENNET
          schema:
            type: string
            example: Sample
        - name: application_context
          in: query
          required: false
          description: case-insensitive name of the application context
          schema:
            type: string
            enum:
              - HUBMAP
              - SENNET
      responses:
        '200':
          description: Associations between specified ingest metadata field and provenance entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldEntitiesResponseSingle'
        '400':
          description:  Invalid value for parameter (e.g., *source* not HMFIELD or HUBMAP); invalid parameter
        '404':
          description: No field entities (with list of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-assays:
    get:
      operationId: field_assays_get
      summary: Return associations between ingest metadata fields and the "assays" (dataset data types). Replacement for field-assays.yaml. The response from this endpoint is reliable only for datasets that existed prior to the deployment in 2024 of the assay classifier (aka Rules Engine, aka "soft assay types").
      parameters:
        - name: assaytype
          in: query
          required: false
          description: an identifier that corresponds to an assaytype in field_assays.yaml. Although field_assays also identifies with descriptions and alt-names, these are no longer current.
          schema:
            type: string
            example: scRNAseq-10xGenomics
      responses:
        '200':
          description: Array of ingest metadata fields; each field with its associations with assays/dataset types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAssaysResponse'
        '400':
          description: Invalid parameter
        '404':
          description: no field to assay relationships found (for the set of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-assays/{name}:
    get:
      operationId: field_assays_name_get
      summary: Return associations between the specified ingest metadata field and the "assays" (dataset data types). Replacement for field-assays.yaml. NOTE only those CEDAR fields that are also in legacy field-assays.yaml can be mapped to assays.
      parameters:
        - name: name
          in: path
          required: true
          description: name of the metadata field
          schema:
            type: string
            example: acquisition_instrument_model
        - name: assaytype
          in: query
          required: false
          description: an identifier that corresponds to an assaytype in field_assays.yaml. Although field_assays also identifies with descriptions and alt-names, these are no longer current.
          schema:
            type: string
            example: scRNAseq-10xGenomics
      responses:
        '200':
          description: Specified ingest metadata field with its associations with assays/dataset types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAssaysResponse'
        '400':
          description: Invalid parameter
        '404':
          description: no field to assay relationships found (for the set of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-schemas:
    get:
      operationId: field_schemas_get
      summary: Return associations between ingest metadata fields and metadata schemas/CEDAR templates. Replacement for field-schemas.yaml.
      parameters:
        - name: source
          in: query
          required: false
          description: case-insensitive name of the field-to-type mapping source (HMFIELD = field-types.yaml; CEDAR = CEDAR)
          schema:
            type: string
            enum:
              - HMFIELD
              - CEDAR
        - name: schema
          in: query
          required: false
          description: case-sensitive name of a metadata schema or CEDAR template
          schema:
            type: string
            example: imc
      responses:
        '200':
          description: Associations between ingest metadata fields and metadata schemas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldSchemasResponse'
        '400':
          description: Invalid parameter; invalid value for *source*
        '404':
          description: no field to schema relationships found (for the set of parameters, if specified)
        '5XX':
          description: Unexpected error
  /field-schemas/{name}:
    get:
      operationId: field_schemas_name_get
      summary: Return associations between a specified ingest metadata field and metadata schemas/CEDAR templates. Replacement for field-schemas.yaml.
      parameters:
        - name: name
          in: path
          required: true
          description: name of the metadata field
          schema:
            type: string
            example: acquisition_instrument_model
        - name: source
          in: query
          required: false
          description: case-insensitive name of the field-to-type mapping source (HMFIELD = field-types.yaml; CEDAR = CEDAR)
          schema:
            type: string
            enum:
              - HMFIELD
              - CEDAR
        - name: schema
          in: query
          required: false
          description: case-sensitive name of a metadata schema or CEDAR template
          schema:
            type: string
            example: imc
      responses:
        '200':
          description: Associations between specified ingest metadata field and metadata schemas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldSchemasResponseSingle'
        '400':
          description: Invalid parameter; invalid value for *source*
        '404':
          description: no field to schema relationships found (for the set of parameters, if specified)
        '5XX':
          description: Unexpected error
components:
  schemas:
    AssayTypePropertyInfo:
      type: object
      description: Properties of a HuBMAP/SenNet assaytype
      properties:
        name:
          type: string
          description: assaytype hierarchy
          example: bulk-RNA
        primary:
          type: boolean
          description: Indicates whether the assay is primary (true) or derived (false)
          example: true
        description:
          type: string
          description: How datasets of the data type are named in the Data Portal.
          example: Bulk RNA-seq
        vitessce-hints:
          type: array
          description: Flags for Vitessce visualization
          items:
            type: string
            example: ["pyramid","anndata"]
        contains-pii:
          type: string
          description: DEPRECATED
          example: deprecated
        vis-only:
          type: string
          description: DEPRECATED
          example: deprecated
    RuiCodeTerm:
      type: object
      description: Respoonse body for organs/by-code GET request
      properties:
        rui_code:
          type: string
          description: Two letter organ code
          example: "UT"
        term:
          type: string
          description: Organ type
          example: "Uterus"
    SabCodeTermRuiCode:
      type: object
      description: Response body for organs GET request
      properties:
        sab:
          type: string
          description: Source abbreviation
          example: "HUBMAP"
        term:
          type: string
          description: Organ type
          example: "Uterus"
        code:
          type: string
          description: The identifier for a concept in a vocabulary or ontology in the UMLS. A code is unique to the ontology.
          example: "C030081"
        rui_code:
          type: string
          description: Two letter organ code
          example: "UT"
        organ_uberon:
          type: string
          description: UBERON or FMA code.
        organ_cui:
          type: string
          description: The organ CUI
    HGNCIdRelationships:
      type: object
      description: Response Body for relationships/hgnc-id/{id} GET request
      properties:
        symbol-approved:
          description: HGNC data Approved Symbols, but should only be one
          type: array
          items:
            type: string
            example: ["MMRN1"]
        symbol-previous:
          description: HGNC data Previous Symbols
          type: array
          items:
            type: string
            example: ["MMRN"]
        symbol-alias:
          description: HGNC data Alias Symbols
          type: array
          items:
            type: string
            example: ["EMILIN4", "GPIa*", "ECM"]
    SabCodeTerm: # Schema name
      type: object
      properties:
        sab:
          type: string
          example: NCI
        code:
          type: string
          example: C16853
        term:
          type: string
          example: Microscopy
    AssayNameRequest: # Schema name CPK MR 2023.
      type: object
      description: Request body for assaytype POST request
      properties:
        name:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: AssayType name which can be a string or an array of strings. This is an array for downward compatibility.
          example: [AF]
        application_context:
          type: string
          default: HUBMAP
          enum:
            - HUBMAP
            - SENNET
            - hubmap
            - sennet
            - HuBMAP
            - SenNet
    GeneListResponse:
      type: object
      description: High-level information on a set of genes requested by the genes endpoint.
      properties:
        genes:
          type: array
          description: gene information
          items:
            type: object
            properties:
              approved_name:
                type: string
                description: HGNC approved name
                example: multimerin 1
              approved_symbol:
                type: string
                description: HGNC approved symbol
                example: MMRN1
              summary:
                type: string
                description: RefSeq summary for the gene
                example: Multimerin is a massive, soluble protein found in....
        pagination:
          type: object
          description: pagination statistics
          properties:
            items_per_page:
              type: number
              description: original value of genes_per_page request parameter
              example: 3
            page:
              type: number
              description: original value of page request parameter
              example: 1
            total_pages:
              type: number
              description: calculated total number of "pages" (blocks) based on the values of items_per_page and the total number of items
              example: 14381
            starts_with:
              type: string
              description: original value of starts_with request parameter
              example: M
            item_count:
              type: number
              description: Calculated count of items. If starts_with is non-null, the count is that of the genes with approved HGNC symbols that start with the value of starts_with.
              example: 500
    GeneDetailResponse: # JAS Sept 2023
      type: object
      description: Detailed information on a gene requested by the gene endpoint
      properties:
        alias_names:
          type: array
          description: HGNC alias names
          items:
            type: string
          example: [glycoprotein Ia*]
        alias_symbols:
          type: array
          description: HGNC alias symbols
          items:
            type: string
          example: [GPIa*,EMILIN4,ECM]
        approved_name:
          type: string
          description: HGNC approved name
          example: multimerin 1
        approved_symbol:
          type: string
          description: HGNC approved symbol
          example: MMRN1
        cell_types:
          type: array
          description: Cell Ontology cell types associated with a HGNC gene in the Human Referene Atlas (HRA)
          items:
            type: object
            properties:
              definition:
                type: string
                description: Definition of the cell type from Cell Ontology
                example: A endothelial cell of a lymphatic ....
              id:
                type: string
                description: Identifier for the cell type, in format CL<colon>code
                example: CL:0002138
              name:
                type: string
                description: Name (preferred term) for the cell type from Cell Ontology
                example: endothelial cell of lymphatic vessel
              organs:
                type: array
                description: Array of organs associated with the cell type, based on relationships in the Human Resource Atlas and Azimuth
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Identifier (code) for the organ in source
                      example: '0000948'
                    source:
                      type: string
                      description: Source vocabulary for id for organ
                      example: UBERON
                    name:
                      type: string
                      description: Name (preferred term) for organ in source
                      example: heart
              sources:
                type: array
                description: Array of identifiers of sources for the association of the cell type to the gene
                items:
                  type: string
                  example: Human Reference Atlas
        hgnc_id:
          type: number
          description: numeric HGNC ID for the gene
          example: 60
        previous_names:
          type: array
          description: previous names for the gene in HGNC
          items:
            type: string
          example: [multimerin]
        previous_symbols:
          type: array
          description: previous symbols for the gene in HGNC
          items:
            type: string
            example: [MMRN]
        references:
          type: array
          description: Reference for the gene between HGNC and other vocabularies. References can be either a cross-reference (e.g., between HGNC ID and NCBI Entrez ID) or from a known relationship (e.g., gene-protein relationships between a gene in HGNC and a protein in UniProtKB).
          items:
            type: object
            properties:
              id:
                type: string
                description: ID (code) for the reference in the source
                example: 22915
              source:
                type: string
                description: source vocabulary for the reference
                example: entrez
              url:
                type: string
                description: URL to reference site
                example: https://www.ncbi.nlm.nih.gov/gene/22915
        summary:
          type: string
          description: RefSeq summary of the gene
          example: Multimerin is a massive, soluble protein found in....
    ProteinListResponse:
      type: object
      description: High-level list of proteins with pagination details, requested by the proteins endpoint.
      properties:
        proteins:
          type: array
          description: protein information
          items:
            type: object
            properties:
              id:
                type: string
                description: UniProtKB identifier
                example: Q13201
              entry_name:
                type: string
                description: UniProtKB Entry Name
                example: MMRN1_HUMAN
              recommended_name:
                type: string
                description: UniProtKB Recommended Name
                example: multimerin-1
              #synonyms:
                #type: array
                #description: list of synonyms
                #items:
                  #type: string
                #example:
                  #[p155,p-155,multimerin,Endothelial cell multimerin]
        pagination:
          type: object
          description: pagination statistics
          properties:
            items_per_page:
              type: number
              description: original value of proteins_per_page request parameter
              example: 3
            page:
              type: number
              description: original value of page request parameter
              example: 1
            total_pages:
              type: number
              description: calculated total number of "pages" (blocks) based on the values of proteins_per_page and the total number of proteins
              example: 14381
            starts_with:
              type: string
              description: original value of starts_with request parameter
              example: M
            item_count:
              type: number
              description: Count of proteins. If starts_with is non-null, the count is that of the proteins with names that start with the value of starts_with.
              example: 500
    ProteinDetailResponse:
      type: object
      description: Detailed information on a protein requested by the protein endpoint
      properties:
        id:
          type: string
          description: UniProtKB identifier
          example: Q13201
        entry_name:
          type: string
          description: UniProtKB Entry Name
          example: MMRN1_HUMAN
        recommended_name:
          type: string
          description: UniProtKB Recommended Name
          example: multimerin-1
        #synonyms:
          #type: array
          #description: alternative names
          #items:
            #type: string
          #example: [EMILIN-4,Elastin microfibril interface located protein 4 (Elastin microfibril interfacer 4),Endothelial cell multimerin]
        references:
          type: array
          description: Array of links to protein databases
          items:
            type: object
            properties:
              source:
                type: string
                description: protein database name
                example: uniprotkb
              entry:
                type: string
                description: description of protein in source--e.g., the "function" in UniProtKB
                example: Carrier protein for platelet (but not plasma) factor V/Va. Plays a role…
              url:
                type: string
                description: URL to reference site
                example: https://www.ncbi.nlm.nih.gov/gene/22915
              curation:
                type: string
                description: method of curation
                enum:
                  - swissprot
                  - trembl
        organisms:
          type: array
          description: array of relevant organism, named in binomial nomenclature
          items:
            type: string
            example: [Homo sapiens]
    CellTypeListResponse:
      type: object
      description: High-level list of cell types with pagination details, requested by the celltypes-info endpoint.
      properties:
        cell_types:
          type: array
          description: cell type information
          items:
            type: object
            properties:
              id:
                type: string
                description: Cell Ontology code
                example: CL:0002138
              name:
                type: string
                description: Preferred term for the cell type from Cell Ontology
                example: endothelial cell of lymphatic vessel
              definition:
                type: string
                description: Definition of the cell type from Cell Ontology
                example: A endothelial cell of a lymphatic vessel. The border of…
        pagination:
          type: object
          description: pagination statistics
          properties:
            items_per_page:
              type: number
              description: original value of celltypes_per_page request parameter
              example: 3
            page:
              type: number
              description: original value of page request parameter
              example: 1
            total_pages:
              type: number
              description: calculated total number of "pages" (blocks) based on the values of celltypes_per_page and the total number of celltypes
              example: 14381
            starts_with:
              type: string
              description: original value of starts_with request parameter
              example: E
            item_count:
              type: number
              description: calculated count of cell types. If starts_with is non-null, the count is that of the cell types with names that start with the value of starts_with.
              example: 500
    CellTypeDetailResponse:
      type: object
      description: Detailed information on a cell type requested by the celltypes endpoint
      properties:
        cell_type:
          type: object
          description: cell type identifiers
          properties:
            id:
              type: string
              description: Cell Ontology code
              example: CL:0002138
            name:
              type: string
              description: Preferred term for the cell type from Cell Ontology
              example: endothelial cell of lymphatic vessel
            definition:
              type: string
              description: Definition of the cell type from Cell Ontology
              example: A endothelial cell of a lymphatic vessel. The border of…
        biomarkers:
          type: array
          description: Array of biomarkers associated with the cell type
          items:
            type: object
            properties:
              reference:
                type: string
                description: source for association between cell type and biomarker
                enum:
                  - Human Reference Atlas
                  - Cells
              biomarker_type:
                type: string
                description: type of biomarker
                enum:
                  - gene
                  - protein
                  - lipid
                  - metabolite
              entry:
                type: object
                description: Encoded entry in reference
                properties:
                  vocabulary:
                    type: string
                    description: vocabulary for entry
                    example: hgnc
                  id:
                    type: string
                    description: identifier for entry in vocabulary
                    example: 7178
                  symbol:
                    type: string
                    description: symbol for entry in vocabulary
                    example: MMRN1
                  name:
                    type: string
                    description: preferred term for entry in vocabulary
                    example: multimerin-1
        organs:
          type: array
          description: Organs associated with the cell type, based on relationships in the Human Resource Atlas and Azimuth
          items:
            type: object
            properties:
              id:
                type: string
                description: Identifier (code) for the organ in source
                example: '0000948'
              source:
                type: string
                description: Source vocabulary for id for organ
                example: UBERON
              name:
                type: string
                description: Name (preferred term) for organ in source
                example: heart
    FieldDescriptionsResponse:
      type: object
      description: Descriptions for ingest metadata fields
      properties:
        fields:
          type: array
          description: array of fields and their descriptions
          items:
            type: object
            properties:
              code_ids:
                type: array
                description: Codes for the field in different ontologies. HMFIELD codes are from the legacy field_*.yaml files; CEDAR codes are from CEDAR template schemas.
                items:
                  type: string
                  example: ["HMFIELD:1008","CEDAR:9f654d25-4de7-4eda-899b-417f05e5d5c3"]
              name:
                type: string
                description: identifier for metadata field
                example: ablation_distance_between_shots_x_units
              descriptions:
                type: array
                description: descriptions of field, from both HMFIELD and CEDAR
                items:
                  type: object
                  properties:
                    source:
                      type: string
                      description: source of the description
                      example: CEDAR
                    description:
                      type: string
                      description: description string
                      example: Units of x resolution distance between laser ablation shots.
    FieldDescriptionsResponseSingle:
      type: object
      description: Descriptions for a single ingest metadata field
      properties:
        code_ids:
          type: array
          description: Codes for the field in different ontologies. HMFIELD codes are from the legacy field_*.yaml files; CEDAR codes are from CEDAR template schemas.
          items:
            type: string
            example: ["HMFIELD:1008","CEDAR:9f654d25-4de7-4eda-899b-417f05e5d5c3"]
        name:
          type: string
          description: identifier for metadata field
          example: ablation_distance_between_shots_x_units
        descriptions:
          type: array
          description: descriptions of field, from both HMFIELD and CEDAR
          items:
            type: object
            properties:
              source:
                type: string
                description: source of the description
                example: CEDAR
              description:
                type: string
                description: description string
                example: Units of x resolution distance between laser ablation shots.
    FieldTypesResponse:
      type: object
      description: Associations between ingest metadata fields and ingest metadata field data types
      properties:
        fields:
          type: array
          description: array of fields and their data types
          items:
            type: object
            properties:
              code_ids:
                type: array
                description: Codes for the field in different ontologies. HMFIELD codes are from the legacy field_*.yaml files; CEDAR codes are from CEDAR template schemas.
                items:
                  type: string
                  example: ["HMFIELD:1018","CEDAR:ea6e26f1-30df-4a8c-9f15-63111ea0b68b"]
              name:
                type: string
                description: identifier for metadata field
                example: area_unit
              types:
                type: array
                description: field type associations
                items:
                  type: object
                  properties:
                    mapping_source:
                      type: string
                      description: source of the field-to-type mapping (i.e., the ontology).
                      example: CEDAR
                    type_source:
                      type: string
                      description: source of the field code (i.e., the type ontology)
                      example: XSD
                    type:
                      type: string
                      description: the term for the type code in the type ontology
                      example: float
    FieldTypesResponseSingle:
      type: object
      description: Associations between single ingest metadata field and ingest metadata field data types
      properties:
        code_ids:
          type: array
          description: Codes for the field in different ontologies. HMFIELD codes are from the legacy field_*.yaml files; CEDAR codes are from CEDAR template schemas.
          items:
            type: string
            example: ["HMFIELD:1018","CEDAR:ea6e26f1-30df-4a8c-9f15-63111ea0b68b"]
        name:
          type: string
          description: identifier for metadata field
          example: area_unit
        types:
          type: array
          description: field type associations
          items:
            type: object
            properties:
              mapping_source:
                type: string
                description: source of the field-to-type mapping (i.e., the ontology).
                example: CEDAR
              type_source:
                type: string
                description: source of the field code (i.e., the type ontology)
                example: XSD
              type:
                type: string
                description: the term for the type code in the type ontology
                example: float
    FieldTypesInfoResponse:
      type: object
      description: Details on ingest metadata field types.
      properties:
        types:
          type: array
          description: field types
          items:
            type: object
            properties:
              type_source:
                type: string
                description: source of the field code (i.e., the type ontology)
                example: XSD
              type:
                type: string
                description: the term for the type code in the type ontology
                example: float
    FieldEntitiesResponse:
      type: object
      description: Associations between ingest metadata fields and provenance entities
      properties:
        fields:
          type: array
          description: array of fields, each with its associated provenance entities
          items:
            type: object
            properties:
              codeID:
                type: string
                description: Code in the HMFIELD ontology
                example: HMFIELD:1001
              name:
                type: string
                description: identifier for metadata field
                example: ablation_distance_between_shots_x_units
              entities:
                type: array
                description: array of provenance entities associated with the field. Each provenance entity can correspond to nodes in both the HMFIELD and HUBMAP ontologies.
                items:
                  type: object
                  properties:
                    nodes:
                      type: array
                      description: array of nodes for the entity in all ontologies.
                      items:
                        type: object
                        properties:
                          source:
                            type: string
                            description: ontology for the provenance entity
                            example: HUBMAP
                          code:
                            type: string
                            description: code for the provenance entity in the source ontology
                            example: C040002
                          name:
                            type: string
                            description: preferred term for the provenance entity
                            example: Sample
    FieldEntitiesResponseSingle:
      type: object
      description: Associations between single ingest metadata field and provenance entities
      properties:
        codeID:
          type: string
          description: Code in the HMFIELD ontology
          example: HMFIELD:1001
        name:
          type: string
          description: identifier for metadata field
          example: ablation_distance_between_shots_x_units
        entities:
          type: array
          description: array of provenance entities associated with the field. Each provenance entity can correspond to nodes in both the HMFIELD and HUBMAP ontologies.
          items:
            type: object
            properties:
              nodes:
                type: array
                description: array of nodes for the entity in all ontologies.
                items:
                  type: object
                  properties:
                    source:
                      type: string
                      description: ontology for the provenance entity
                      example: HUBMAP
                    code:
                      type: string
                      description: code for the provenance entity in the source ontology
                      example: C040002
                    name:
                      type: string
                      description: preferred term for the provenance entity
                      example: Sample
    FieldAssaysResponse:
      type: object
      description: Associations between ingest metadata fields and "assays" (or datasets generated by assays)
      properties:
        fields:
          type: array
          description: array of fields, each with its associated assays/dataset types
          items:
            type: object
            properties:
              field_name:
                type: string
                description: name of the metadata field
                example: acquisition_instrument_model
              assaytypes:
                type: array
                description: array of assaytypes associated with the field
                items:
                  type: string
                  example: MIBI
    FieldSchemasResponse:
      type: object
      description: Associations between ingest metadata fields and metadata schemas
      properties:
        fields:
          type: array
          description: array of fields, each with its associated schemas
          items:
            type: object
            properties:
              code_ids:
                type: array
                description: Codes for the field in different ontologies. HMFIELD codes are from the legacy field_*.yaml files; CEDAR codes are from CEDAR template schemas.
                items:
                  type: string
                  example: ["HMFIELD:1008","CEDAR:9f654d25-4de7-4eda-899b-417f05e5d5c3"]
              name:
                type: string
                description: identifier for metadata field
                example: ablation_distance_between_shots_x_units
              schemas:
                type: array
                description: array of metadata schemas/templates associated with the field
                items:
                  type: object
                  properties:
                    source:
                      type: string
                      description: source of schema mapping
                      example: HMFIELD
                    schema:
                      type: string
                      description: name of schema
                      example: imc3d
    FieldSchemasResponseSingle:
      type: object
      description: Associations between a single ingest metata fields and metadata schemas
      properties:
        code_ids:
          type: array
          description: Codes for the field in different ontologies. HMFIELD codes are from the legacy field_*.yaml files; CEDAR codes are from CEDAR template schemas.
          items:
            type: string
            example: ["HMFIELD:1008","CEDAR:9f654d25-4de7-4eda-899b-417f05e5d5c3"]
        name:
          type: string
          description: identifier for metadata field
          example: ablation_distance_between_shots_x_units
        schemas:
          type: array
          description: array of metadata schemas/templates associated with the field
          items:
            type: object
            properties:
              source:
                type: string
                description: source of schema mapping
                example: HMFIELD
              schema:
                type: string
                description: name of schema
                example: imc3d
    AssayClass:
      type: object
      description: A set of assay classifications
      properties:
        rule_description:
          type: object
          description: information on the rule in the Rules Engine's testing_rule_chain.json
          properties:
            code:
              type: string
              description: UBKG code for the rule.
              example: HUBMAP:C200150
            name:
              type: string
              description: corresponds to the "rule_description" key in the assay classification object in the testing_rule_chain.json.
              example: non-DCWG primary IMC2D
        value:
          type: object
          description: corresponds to the "value" key in the assay classification object in the testing_rule_chain.json. Contains configuration metadata common to all datasets that are generated by a particular processing workflow.
          properties:
            active_status:
              type: string
              description: whether the assay classification corresponds to an active ingestion workflow--i.e., whether datasets can be processed.
              example: active
            assaytype:
              type: string
              description: unique identifier for an ingestion processing workflow.
              example: IMC2D
            dataset_type:
              type: object
              description: categorization of datasets that are generated by the assay class. Allows for multiple analytical hierarchies.
              properties:
                dataset_type:
                  type: string
                  description: corresponds to the "dataset_type" key in the testing_rule_chain.json.
                  example: 2D Imaging Mass Cytometry
                PDR_category:
                  type: string
                  description: category for the dataset_type per the HuBMAP Data Coordination Working Group's "Pipeline Decision Rules" (PDR) document.
                  example: MxNF
                fig2:
                  type: object
                  description: categorization of the dataset_type that comforms to that used in Figure 2 of the 2023 Jain et al paper in Nature Cell Biology (https://www.nature.com/articles/s41556-023-01194-w).
                  properties:
                    aggregated_assaytype:
                      type: string
                      description: corresponds to "assay type" category in Figure 2.
                      example: LC-MS
                    modality:
                      type: string
                      description: corresponds to "modality" category in Figure 2.
                      example: Proteomics
                    category:
                      type: string
                      description: corresponds to "category" category in Figure 2.
                      example: bulk
                description:
                  type: string
                  description: the string used to describe datasets generated by the processing workflow associated with the assay classification
                  example: 2D Imaging Mass Cytometry
                dir_schema:
                  type: string
                  description: identifier for the directory schema for files in datasets generated by the processing workflow associated with the assay classification
                  example: imc-v0
                tbl_schema:
                  type: string
                  description: identifier for the table schema for files in datasets generated by the processing workflow associated with the assay classification
                  example: imc-v
                measurement_assay:
                  type: object
                  description: corresponds to the generic experiment or assay modality used to generate a "raw" dataset from a tissue sample.
                  properties:
                    codes:
                      type: array
                      description: set of codes from biomedical vocabularies for the measurement assay
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            description: code from a biomedical vocabulary or ontology
                            example: OBI:0003096
                          term:
                            type: string
                            description: preferred term for the code in the biomedical vocabulary or ontology
                            example: imaging mass cytometry assay
                    contains_full_genetic_sequences:
                      type: boolean
                      description: whether the measurement assay generates full genetic sequences from the sample. Full genetic sequencing information from human sources is considered Patient Identifying Information (PII), which is protected.
                      example: false
                is_multiassay:
                  type: boolean
                  description: indicates whether the assay class is for a "multi-assay". Multi-assays use more than one experimental modality on samples to generate datasets--e.g., both RNAseq and ATACseq.
                must_contain:
                  type: array
                  description: if the assay class is for a multi-assay, a list of the dataset types that are considered components of the multi-assay.
                  items:
                    type: string
                    example:
                      [RNASeq,ATACSeq]
                pipeline_shorthand:
                  type: string
                  description: name that summarizes a multi-factor processing workflow
                  example: Salmon + SPRM
                process_state:
                  type: string
                  description: whether datasets generated by the processing workflow associated with the assay class are "primary" (from the original experiment); "derived"/"processed" (from post-experimental data processing); or "epic" (Externally Processed Integrated Collections)
                  example: primary
                provider:
                  type: string
                  description: the provider of datasets generated by the processing workflow associate with the assay class. Possible values are "IEC" (corresponding to datasets generated by the HuBMAP/SenNet Infrastructure and Engagement Component) or "External" (complete datasets coming directly from a HuBMAP/SenNet lab--e.g., a Tissue Mapping Center).
                  example: IEC
                vitessce_hints:
                  type: array
                  description: set of keys used to identify the type of visualization that the Vitessce application should use to represent datasets associated with the assay class.
                  items:
                    type: string
                    example: [anndata,rna]
